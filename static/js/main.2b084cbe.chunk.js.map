{"version":3,"sources":["Component/Header.js","Component/Recipe.js","App.js","index.js"],"names":["Header","props","className","type","placeholder","value","search","onChange","onInputChange","onClick","onSearchClick","Recipe","recipe","map","curElem","href","strSource","target","strMeal","bgChange","style","color","bg","class","src","strMealThumb","strCategory","strArea","strIngredient1","strMeasure1","strIngredient2","strMeasure2","strIngredient3","strMeasure3","strIngredient4","strMeasure4","strIngredient5","strMeasure5","strIngredient6","strMeasure6","strIngredient7","strMeasure7","strIngredient8","strMeasure8","strIngredient9","strMeasure9","strInstructions","App","useState","setSearch","setRecipe","useEffect","getRecipe","black","setBg","a","Axios","get","res","data","meals","console","log","e","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.2b084cbe.chunk.js","sourcesContent":["import React from 'react';\r\n\r\n\r\nconst Header = (props) => {\r\n    return (\r\n    <div className = \"jumbotron\" > \r\n        <h1 className = \"display-1\" > Recipe Finder</h1>\r\n        <div className=\"input-group w-50 mx-auto\">\r\n           <input type=\"text\" className=\"form-control\" placeholder = \"Enter the name of the dish\" value = {props.search}\r\n              onChange = {props.onInputChange} />\r\n           <div>\r\n                 <button className = \"btn btn-dark ms-5\" onClick = {props.onSearchClick} >\r\n                     Get Recipes  </button>\r\n           </div>\r\n         </div>\r\n         <div className = \"mt-3\" > <h2> Type a dish name to search for it's ingredient </h2>   </div>\r\n         \r\n    </div>\r\n    );\r\n}\r\n\r\n\r\n\r\n\r\nexport default Header;","import React from 'react';\r\nimport './Recipe.css';\r\n\r\n\r\n\r\nconst Recipe = (props) => {\r\n\r\n      \r\n    \r\n    return( \r\n\r\n            \r\n    <div>\r\n              {   \r\n                  props.recipe.map( curElem => (\r\n        <div className = \"contain me-3 ms-3\" >\r\n                <div className = \"position-relative\" >\r\n                <h1 className = \"heading mb-4 \" > <a href = {curElem.strSource} className = \"link\" target = \"_blank\" > {curElem.strMeal} </a> <button onClick = {props.bgChange}  style = { {color : props.bg}} className = \"position-absolute top-0 end-0 me-5 mt-2 align1\" > <i class=\"fa fa-heart-o \"  aria-hidden=\"true\"></i> </button>  </h1>\r\n                </div>\r\n                <div className = \"d-flex \"   > \r\n                   <div className = \"left12\" >\r\n                   <img  className = \"image ms-5 mt-5\" src = {curElem.strMealThumb} />\r\n                   </div>\r\n                    <div className = \"right12 ms-5 \" >\r\n                        \r\n                        <div className = \"ms-3\" >      \r\n                        <p className = \"mb-0\" >   Category of the meal - <span>  {curElem.strCategory} </span>     </p> \r\n                        <p  >   Area of the meal -  {curElem.strArea }       </p> \r\n                        </div>\r\n                        <div className = \"ms-3\" >  \r\n                            <span  > Ingredients </span>\r\n                            <div className = \"scrPro\" > \r\n                                {/* Ingredients content */}\r\n                               <div className = \"ms-4 mt-2\" > \r\n                              <p> {curElem.strIngredient1} ---- {curElem.strMeasure1}    </p>  \r\n                              <p> {curElem.strIngredient2} ---- {curElem.strMeasure2}    </p>  \r\n                              <p> {curElem.strIngredient3} ---- {curElem.strMeasure3}    </p>  \r\n                              <p> {curElem.strIngredient4} ---- {curElem.strMeasure4}    </p>  \r\n                              <p> {curElem.strIngredient5} ---- {curElem.strMeasure5}    </p>  \r\n                              <p> {curElem.strIngredient6} ---- {curElem.strMeasure6}    </p>  \r\n                              <p> {curElem.strIngredient7} ---- {curElem.strMeasure7}    </p>  \r\n                              <p> {curElem.strIngredient8} ---- {curElem.strMeasure8}    </p>  \r\n                              <p> {curElem.strIngredient9} ---- {curElem.strMeasure9}    </p>  \r\n                               </div>\r\n                            </div>\r\n                        </div>\r\n                        <div className = \"mt-3  me-5 \" > \r\n                            <p className = \"align \" > Recipes </p>    \r\n                            <div> \r\n                                <p  className = \"scrPro1\" > \r\n                                     {curElem.strInstructions}\r\n                                </p>\r\n                            </div>\r\n                        </div>\r\n\r\n\r\n                    </div>\r\n\r\n                </div>\r\n       </div>                    \r\n                      \r\n\r\n                  ))\r\n              } \r\n               \r\n    </div>\r\n    );\r\n}\r\n\r\nexport default Recipe;\r\n\r\n             \r\n           ","import React , {useState , useEffect } from 'react';\nimport Header from './Component/Header';\nimport Recipe from './Component/Recipe';\nimport \"./App.css\";\nimport Axios from 'axios';\n\n\n\nconst App = () => {\n\n  \n\n  const[search , setSearch] = useState(\"pasta\");\n  const[recipe , setRecipe] = useState([]);\n  const[error , setError] = useState(null);\n\n\n   useEffect(  () => {\n         getRecipe();\n         \n  }, [] );\n\n   const black = \"#000000\";\n     const [bg , setBg]  = useState(black);\n      const bgChange = () => {\n        if( bg == black ){\n        let newBg = \"#ff0000\";\n        setBg(newBg);\n        }\n        else {\n          setBg(black);\n        }\n         \n      }\n      \n\n\n  \n  \n   \n  const getRecipe = async () =>  {   \n    try{\n    const res = await Axios.get(`https://www.themealdb.com/api/json/v1/1/search.php?s=${search}`);\n        \n    \n    setRecipe(res.data.meals);\n    }\n    \n     catch ( err ) {\n         console.log(`this is occuring........ ${err}`); \n         \n   }     \n  }\n\n   \n   \n   \n   \n  \n  \n\n  const onInputChange = (e) => {\n    setSearch(e.target.value);\n  }\n\n\n  const onSearchClick = () => {\n     getRecipe();\n  }\n  \n\n\n  return (\n       <div className = \"App\" >\n           \n           \n          <Header  search = {search} \n              onInputChange = {onInputChange}  \n              onSearchClick = {onSearchClick}\n              />  \n            \n          <Recipe recipe = {recipe} \n          bg = {bg}\n          bgChange = {bgChange} \n          \n          \n           />  \n\n          \n         \n       </div>\n  );\n}\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\n\n\nReactDOM.render(\n  \n    <App />\n  ,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}